{
read Q, Right;
#init!:
    := Qtail Q;
    := Left ();
    goto #loop!;
#loop!:
    if == Qtail <> goto #stop! else #cont!;
#cont!:
    := Instruction firstInstruction Qtail;
    := Qtail rest Qtail;
    := Operator hd Instruction;
    if == Operator %right/ goto #do_right! else #cont1!;
#cont1!:
    if == Operator %left/ goto #do_left! else #cont2!;
#cont2!:
    if == Operator %write/ goto #do_write! else #cont3!;
#cont3!:
    if == Operator %goto/ goto #do_goto! else #cont4!;
#cont4!:
    if == Operator %if/ goto #do_if! else #fail!;
#do_right!:
    := Left cons firstSym Right Left;
    := Right tl Right;
    goto #loop!;
#do_left!:
    := Right cons firstSym Left Right;
    := Left tl Left;
    goto #loop!;
#do_write!:
    := Right cons hd tl Instruction tl Right;
    goto #loop!;
#do_goto!:
    := Qtail newTail hd tl Instruction Q;
    goto #loop!;
#do_if!:
    := Symbol hd tl Instruction;
    := Nextlabel hd tl tl tl Instruction;
    if == Symbol firstSym Right goto #jump! else #loop!;
#jump!:
    := Qtail newTail Nextlabel Q;
    goto #loop!;
#fail!:
    return %fail/;
#stop!:
    return Right;
}